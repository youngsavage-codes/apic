{"code":"import { __awaiter } from \"tslib\";\nimport { buildHeaders } from './headers';\nimport { cache } from './cache';\nimport { defaultConfig } from './config';\nimport { withRetry } from './retry';\nexport function fetchData(url_1, authToken_1) {\n    return __awaiter(this, arguments, void 0, function* (url, authToken, config = {}, timeout = 5000 // Default timeout: 5 seconds\n    ) {\n        const finalConfig = Object.assign(Object.assign({}, defaultConfig), config);\n        const operation = () => __awaiter(this, void 0, void 0, function* () {\n            if (finalConfig.enableCache) {\n                const cachedData = cache.get(url);\n                if (cachedData && Date.now() - cachedData.timestamp < finalConfig.cacheExpirationTime) {\n                    console.log('Returning cached data');\n                    return cachedData.data;\n                }\n            }\n            const responseOrError = yield Promise.race([\n                fetch(url, {\n                    method: 'GET',\n                    headers: buildHeaders('application/json', authToken),\n                }),\n                new Promise((_, reject) => setTimeout(() => reject(new Error('Request timed out')), timeout)),\n            ]);\n            if (responseOrError instanceof Error) {\n                throw responseOrError; // Timeout or other error\n            }\n            // Now we can safely access Response properties\n            const response = responseOrError;\n            if (!response.ok)\n                throw new Error(`HTTP error: ${response.status}`);\n            const data = yield response.json();\n            if (finalConfig.enableCache)\n                cache.set(url, { data, timestamp: Date.now() });\n            return data;\n        });\n        return finalConfig.enableRetry ? withRetry(operation, finalConfig.retries, finalConfig.retryDelay) : operation();\n    });\n}\n","references":["C:/Users/User/Documents/GitHub/apic/src/api/headers.ts","C:/Users/User/Documents/GitHub/apic/src/api/cache.ts","C:/Users/User/Documents/GitHub/apic/src/api/config.ts","C:/Users/User/Documents/GitHub/apic/src/api/retry.ts"],"dts":{"name":"C:/Users/User/Documents/GitHub/apic/node_modules/.cache/rollup-plugin-typescript2/placeholder/api/fetch.d.ts","writeByteOrderMark":false,"text":"import { defaultConfig } from './config';\nexport declare function fetchData(url: string, authToken?: string, config?: Partial<typeof defaultConfig>, timeout?: number): Promise<any>;\n"}}
